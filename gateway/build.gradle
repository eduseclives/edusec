plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	
	id 'com.google.cloud.tools.jib' version '3.3.2'
	id 'com.gorylenko.gradle-git-properties' version '2.4.1'
	id 'com.palantir.git-version' version '3.0.0'
	id 'jacoco'
	id 'checkstyle'
	id 'com.github.spotbugs' version '6.0.0-rc.2'
	id 'org.owasp.dependencycheck' version '8.4.0'
}

group = 'com.ciberpath.edusec'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springCloudVersion', "2022.0.4")
	set('junit-jupiter.version', "5.10.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.2.0'
	implementation 'io.micrometer:micrometer-observation'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'com.github.loki4j:loki-logback-appender:1.3.2'
	implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'
	
	compileOnly 'org.projectlombok:lombok'
	spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.tngtech.archunit:archunit-junit5:1.1.0'
	
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

gitProperties {
    failOnNoGitDirectory = false
    keys = ["git.branch", "git.commit.id.abbrev", "git.commit.id.describe"]
}

springBoot {
    buildInfo()
}