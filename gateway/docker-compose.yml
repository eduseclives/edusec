name: urt-registro

services:
#    registro-gateway:
#        extra_hosts: ['host.docker.internal:host-gateway']
#        image: urt/registro-gateway
#        ports:
#            - "8090:8080"
#        environment:
#            - STARTUP_SLEEP=30 # gives time for the JHipster Registry to boot before the application
#            - JAVA_OPTS=-Dmanagement.zipkin.tracing.endpoint=http://host.docker.internal:9411/api/v2/spans
#        depends_on:
#            - loki
#            - tempo
    promtail:
        image: grafana/promtail:2.6.1
        volumes:
        # custom config will read logs from the containers of
        # this project
        - ./docker/loki/promtail-config.yaml:/etc/promtail/config.yml
        # to read container labels and logs
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/lib/docker/containers:/var/lib/docker/containers
    tempo:
        image: grafana/tempo
        extra_hosts: ['host.docker.internal:host-gateway']
        command: [ "-config.file=/etc/tempo.yaml" ]
        volumes:
            - ./docker/tempo/tempo-local.yaml:/etc/tempo.yaml:ro
            - ./tempo-data:/tmp/tempo
        ports:
            - "14268"  # jaeger ingest
            - "9411:9411" # zipkin

    loki:
        image: grafana/loki
        extra_hosts: ['host.docker.internal:host-gateway']
        command: [ "-config.file=/etc/loki/local-config.yaml" ]
        ports:
            - "3100:3100"                                   # loki needs to be exposed so it receives logs
        environment:
            - JAEGER_AGENT_HOST=tempo
            - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
            - JAEGER_SAMPLER_TYPE=const
            - JAEGER_SAMPLER_PARAM=1

    prometheus:
        extra_hosts: ['host.docker.internal:host-gateway']
        image: prom/prometheus
        extra_hosts: ['host.docker.internal:host-gateway']
        command:
            - --enable-feature=exemplar-storage
            - --config.file=/etc/prometheus/prometheus.yml
        volumes:
            - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
        ports:
            - "9090:9090"

    grafana:
        image: grafana/grafana
        extra_hosts: ['host.docker.internal:host-gateway']
        volumes:
            - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
            - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
        environment:
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
            - GF_AUTH_DISABLE_LOGIN_FORM=true
        ports:
            - "3000:3000"